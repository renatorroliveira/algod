<?php
	include "controller/UserSession.php";
	$session = UserSession::getInstance();
	if ($session->getAccessLevel() < 3)
		die("<h1>Forbidden.</h1>");
	else if (!isset($_GET['tpb_tst_id']))
		die("<h1>Forbidden.</h1>");
	$testId = $_GET['tpb_tst_id'];
	
	header("Conten-Type: text/x-h");
	header('Content-Disposition:  attachment; filename="ProblemBundleInit.hpp";');
	?>/** Generated by AlGod Web Module
<?php $today = new DateTime('now');
	?>  * Generated at: <?php echo $today->format("d/m/Y H:i:s"); ?>
 *
 * @author AlGod Web Module by Renato R. R. de Oliveira
<?php
	include "controller/TestProblemsBS.php";
	include "controller/EvaluationCaseBS.php";
	
	$bs = new TestProblemsBS(null);
	$qbuilder = new QueryBuilder("testproblems");
	$qbuilder->addEqual('tpb_tst_id', $testId);
	$qbuilder->addOrder('tpb_questionNumber', QueryBuilder::$ASC);
	$qbuilder->addOrder('prb_title', QueryBuilder::$ASC, 'problem');
	$problems = $bs->findNotDeleted($qbuilder);
?> */
name = "<?php echo $problems[0]->getForeignModel("tpb_tst_id")->get("tst_title"); ?>";
cout << "Carregando conjunto de problemas: " << name << endl;
Problem *problem;
TestCase *testCase;
<?php
	foreach ($problems as $p => $tproblem) {
?>/*<?php
		$problem = $tproblem->getForeignModel("tpb_prb_id");
		$ecaseBS = new EvaluationCaseBS(null);
		$qbuilder = new QueryBuilder("evaluationcase");
		$qbuilder->addEqual("evc_prb_id", $problem->get("prb_id"));
		$ecases = $ecaseBS->findNotDeleted($qbuilder);
		$nECases = count($ecases);
?>*/<?php
		if ($nECases > 0) {
?>
problem = new Problem(<?php
	echo $tproblem->get("tpb_questionNumber"); ?>, "<?php
	echo $problem->get("prb_title"); ?>", <?php
	echo $nECases; ?>);
/*<?php
			foreach ($ecases as $ec => $ecase) {
				$inputs = $ecase->getParsedInputs();
				$outputs = $ecase->getParsedOutputs();
				$nInputs = count($inputs['values']);
				$nOutputs = count($outputs['values']);
?> */
testCase = new TestCase(<?php
	echo $nInputs; ?>, <?php
	echo $nOutputs; ?>);
/*<?php
				foreach ($inputs['values'] as $i => $input) {
?> */
testCase->addInput("<?php echo $input; ?>");
testCase->addInputType("<?php echo $inputs['datatypes'][$i]; ?>");
/*<?php
				}
				foreach ($outputs['values'] as $o => $output) {
?> */
testCase->addOutput("<?php echo $output; ?>");
testCase->addOutputType("<?php echo $outputs['datatypes'][$o]; ?>");
/*<?php
				}
?> */
problem->addTestCase(testCase);
/*<?php
			}
?> */
bundle.push_back(problem);
<?php
		}
	}
?>
